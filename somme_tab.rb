#!/usr/bin/env ruby
require 'pruby'

def somme_tab_P( a , b , nb_threads = PRuby.nb_threads )
c = Array . new ( a . size )
(0...c.size ).peach( nb_threads: nb_threads ) do |k|
c[k] = a[k] + b[k]
end
c
end

starting = Time.now
A=Array.new([1,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,41,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,42,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,41,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,4,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 32, 24, 32, 16, 24, 320, 176, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 4,336, 24, 336, 24, 336, 24, 336, 24, 32, 24, 16, 24, 320, 176, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24])
B=Array.new([1,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,41,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,42,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,41,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,4,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3,2,3,40,22,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,42,3,4,3, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 6, 84, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 32, 24, 32, 16, 24, 320, 176, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 4,336, 24, 336, 24, 336, 24, 336, 24, 32, 24, 16, 24, 320, 176, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24, 336, 24])


C=somme_tab_P(A,B,PRuby.nb_threads)
print C
puts("\n")
ending = Time.now
elapsed = ending - starting
puts"le temps d'execution en mode paralléle est #{elapsed}"

def somme_tab_S(a,b)
n=a.size-1
c=Array.new(n)
for i in 0..n
 c[i]=a[i] + b[i] 
end
c
end
starting = Time.now
c=somme_tab_S(A,B)
ending = Time.now
print c
puts("\n")
elapsed = ending - starting
puts"le temps d'execution en mode séquentiel est #{elapsed}"